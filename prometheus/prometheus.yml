# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  #- "rules/myrules.yml"
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'grafana'
    static_configs:
    - targets: ['grafana:3000']
  
  # node_exporter must be installed in the host machine first
  # target ip must be host ip
  - job_name: 'node_exporter'
    static_configs:
    - targets: ['192.168.1.179:9100']

  # prom_com_usage_exporter must be execute on the host machine first
  # target ip must be host ip
  - job_name: 'python_com_usage_exporter'
    static_configs:
    - targets: ['192.168.1.179:8001']

  # go_counter_exporter must be execute on the host machine first
  # target ip must be host ip
  - job_name: 'go_counter_exporter'
    static_configs:
    - targets: ['192.168.1.179:8007']

  - job_name: 'cloudwatch_exporter'
    static_configs:
    - targets: ['cloudwatch_exporter:9106']
